name: Run all tests

# Run this workflow every time a new commit is pushed to the repository
on:
  push:
    branches:
    - master
  pull_request:

jobs:
  run-all-tests:
    name: Run all tests

    # TODO: not sure what the best OS to run on is so ubuntu will do for now
    runs-on: ubuntu-latest

    strategy:
      # Allows running the build multiple times with different configurations
      matrix:
        rust: ["stable", "beta"]
        deny_warnings: ['', 1]

        # TODO: I don't know how to make it run only the check_exercises.sh script
        # For nightly rust, run the job with DENYWARNINGS=1
        include:
          - rust: nightly
            deny_warnings: 1
    
    # Allow failures on nightly rust, or beta if DENYWARNINGS is enabled
    continue-on-error: ${{ matrix.rust == 'nightly' || ( matrix.rust == 'beta' && DENYWARNINGS == '1' ) }}

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2
        env: 
          DENYWARNINGS: ${{ matrix.deny_warnings }}

      # run these as steps
      - name: Check exercises
        run: ./_test/check-exercises.sh

      - name: Ensure src/lib.rs files exist
        run: bash ./_test/ensure-lib-src-rs-exist.sh

      - name: Ensure stubs compile
        run: sh ./_test/ensure-stubs-compile.sh

      - name: Count ignores
        run: sh ./_test/count-ignores.sh

      - name: Fetch configlet
        run: ./bin/fetch-configlet

      - name: Check configlet format
        run: ./_test/check-configlet-fmt.sh

      - name: Ensure readmes are updated
        run: sh ./_test/ensure-readmes-are-updated.sh

      - name: Lint configlet
        run: ./bin/configlet lint .

      - name: Check UUIDs
        run: sh ./_test/check-uuids.sh

      - name: Verify exercise difficulties
        run: ./_test/verify-exercise-difficulties.sh

      - name: Check exercises for authors
        run: ./_test/check-exercises-for-authors.sh

      - name: Check exercise crate
        run: sh ./_test/check-exercise-crate.sh
