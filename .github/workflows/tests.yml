name: Run all tests

# Run this workflow every time a new commit is pushed to the repository
on:
  push:
    branches:
    - master
    - actions-test
  pull_request:

jobs:
  ensure-conventions:
    name: Ensure conventions are followed
    runs-on: ubuntu-latest

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Ensure src/lib.rs files exist
        run: bash ./_test/ensure-lib-src-rs-exist.sh

      - name: Count ignores
        run: sh ./_test/count-ignores.sh

      - name: Check UUIDs
        run: sh ./_test/check-uuids.sh

      - name: Verify exercise difficulties
        run: ./_test/verify-exercise-difficulties.sh

      - name: Check exercises for authors
        run: ./_test/check-exercises-for-authors.sh

  configlet:
    name: Setup configlet
    runs-on: ubuntu-latest

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Fetch configlet
        run: ./bin/fetch-configlet

      - name: Check configlet format
        run: ./_test/check-configlet-fmt.sh

      - name: Ensure readmes are updated
        run: sh ./_test/ensure-readmes-are-updated.sh

      - name: Lint configlet
        run: ./bin/configlet lint .


  compilation:
    name: Check compilation
    runs-on: ubuntu-latest

    strategy:
      # Allows running the job multiple times with different configurations
      matrix:
        rust: ["stable", "beta"]
        deny_warnings: ['', '1']

        # TODO: probably just move this one out to its own job
        # For nightly rust, run the job with BENCHMARK=1
        # include:
        #   - rust: nightly
        #     benchmark: 1

    # TODO: figure out how to make this work for beta + denywarnings
    # - continue-on-error: true
      # if: ( matrix.rust == 'beta' && DENYWARNINGS == '1' )

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
            toolchain: ${{ matrix.rust }}

      # run scripts as steps
      - name: Check exercises
        env:
          DENYWARNINGS: ${{ matrix.deny_warnings }}      
        run: ./_test/check-exercises.sh

      - name: Ensure stubs compile
        env:
          DENYWARNINGS: ${{ matrix.deny_warnings }}
        run: sh ./_test/ensure-stubs-compile.sh

      - name: Check exercise crate
        env:
          DENYWARNINGS: ${{ matrix.deny_warnings }}
        run: sh ./_test/check-exercise-crate.sh

  nightly-compilation:
    name: Check exercises on nightly (benchmark enabled)
    runs-on: ubuntu-latest

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly

      - name: Check exercises
        env:
          BENCHMARK: '1'
        run: ./_test/check-exercises.sh
